<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnRecargar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABIxJREFUSEudkwtMlWUYx99zuGhiOlApjshFQUXAiJW66Wozl2mtVc7UmqWJ5qUS
        07JVulYuXZex5S1L2MqYSlqmZkDmrGje0GQqSYoOFEgFCWRcRPj1PO93DooirZ5v/53vfHu/5/f+/8/7
        mX+r0LRKVGGrLhP2aQ3xWxqJ2dxkNWB7C/HZLXiXdlxdUo6g8v5tqx5LS0nMqGLKj3W8cfwaK89BZrmj
        3EtwvBayzsOcYxCb3UriT3QMcs89Ts8N9e0gdy46RZI0f/YIPHawlfGH4Sm5n3IUZvwBs4sg9RQWeqga
        CkTTBBSX0wFEAebLhjZI8MKT3LO1nuQ9rQzb28IDeTDuoAOYWgAzT8BLJ+E1ASwuhjfPwBcVcLrOcadu
        vK29NesoJqOOwI1NBK2/QtTX9XaRZusDPOwFqIObAe+chWWlsEYgGptC2jtJOYxJryVgg7iQwfX55qod
        3pAfWqwLBWhE2nySaOLvjp481Gp3v6TEAayQuBSiTtRpQq4PMv0A5rNLNqY7vmq0gIjvmhm4q9kCxuyD
        EBm41fJywtdVW+mp8jnS5qqPy2DTBWcmqYV4Bz8tzwFITOoiOKupHUAX6dCd3bQvhagDjcwHUOXXOHHF
        WRfP/OwAPq9pF1PEVonq+xar+D2dQNbU2qh8AI1phxzj7MswpA2wssyRQDQmPZrvn4bdF2FfpbxUeJWk
        X52ovH3blX6ACtGjqwPWxjoDTcCYCTmE5lyzQ1srw9KGH0rDydv+ZuAH5zDTDqNH+XYOtCLSa+zR1q/c
        ++h6hSwoIK34GiuKmglf+ifWkUC1sXfJf66gxr50bexNEL2lx5hMrEZl/O+GgSfDCTzTl27lffE0DGUU
        k1hOmhdwU7l3JhKQl4jf3mG3Bfrl9cOn4PNx3Fc/jqUsI58D5LCLNaxmHq9YF8ZsGYHZm4wpjMUciMRd
        H4J/VSjurIQOAQH7E/CcGc7UhnnsZAe5cqWzjvcE8DwvypXKyyxgBrPQqIxZnWR3Ygr7YE4L8WII7is9
        cZXchfvbpA4hfrtjLCSF+QxnPE/wglzz5VrEWyyxUgdBldLXvDsYs92DOSLNC0IdkEBMmQfXBU+nkIiS
        h3idt5nATAuYK4BXWWyfqRudiQPID8b81suBqI6FWQcW8le0hfjnDSfgF1GuzGfbIPs79vIsNpHJaKYw
        mTk8J+HMZqGNabKE1K1UHWit7X/dhc9JkTRXSG0/3BVxbTLnYwkh3iqydSSJPGpPzSOy58eZzkRxoxrH
        0zcAtD6JEIjEo268LkyRPCuJxlT3x9UQQ9emOHo0JRHaPILw5pHEtIxmcOtYC0kW6f+YpgftXFRdim8E
        aCkkS5ofvAFyQpydjbZRKSSw3oEEN95rQR6FMYzgyqHoXPyyI+leMYBB3E/gMXn3lvpIBqMQnYmCNC7r
        RhbLTGxkdVECiqLb1Wi6N8TSs2og7szItmauXWF2wP77JZGOyr1RXsiSaCQyXWxOCExPl8L0KJf3wlV8
        t3MvG3KtD7+lkd+efs67nZWeFv2y7SHwSRoq3LVZPkrdRKdlzD8ZjEBg+m3dtAAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>34</value>
  </metadata>
</root>